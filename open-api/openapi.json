{
  "openapi": "3.0.0",
  "info": {
    "title": "RaidHub API",
    "description": "The Semi-public API for RaidHub",
    "version": "1.1.0",
    "contact": {
      "name": "RaidHub Admin",
      "email": "admin@raidhub.io"
    }
  },
  "servers": [
    {
      "url": "https://api.raidhub.io"
    }
  ],
  "security": [
    {
      "API Key": []
    }
  ],
  "components": {
    "schemas": {
      "ErrorCode": {
        "type": "string",
        "enum": [
          "ApiKeyError",
          "PathValidationError",
          "QueryValidationError",
          "BodyValidationError",
          "PlayerNotFoundError",
          "PlayerPrivateProfileError",
          "PlayerProtectedResourceError",
          "InstanceNotFoundError",
          "PGCRNotFoundError",
          "PlayerNotOnLeaderboardError",
          "RaidNotFoundError",
          "PantheonVersionNotFoundError",
          "InvalidActivityVersionComboError",
          "ClanNotFoundError",
          "AdminQuerySyntaxError",
          "InsufficientPermissionsError",
          "InvalidClientSecretError",
          "InternalServerError",
          "BungieServiceOffline"
        ]
      },
      "RaidHubResponse": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "minted": {
                "type": "string",
                "format": "date-time"
              },
              "success": {
                "type": "boolean",
                "enum": [true]
              },
              "response": {
                "nullable": true
              }
            },
            "required": ["minted", "success"],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "minted": {
                "type": "string",
                "format": "date-time"
              },
              "success": {
                "type": "boolean",
                "enum": [false]
              },
              "code": {
                "$ref": "#/components/schemas/ErrorCode"
              },
              "error": {
                "nullable": true
              }
            },
            "required": ["minted", "success", "code"],
            "additionalProperties": false
          }
        ]
      },
      "ApiKeyError": {
        "type": "object",
        "properties": {
          "message": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["Invalid API Key"]
              },
              {
                "type": "string",
                "enum": ["Missing API Key"]
              }
            ]
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["message", "apiKey", "origin"]
      },
      "ZodIssue": {
        "type": "object",
        "properties": {
          "fatal": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "path": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "code": {
            "type": "string",
            "enum": [
              "invalid_type",
              "invalid_literal",
              "custom",
              "invalid_union",
              "invalid_union_discriminator",
              "invalid_enum_value",
              "unrecognized_keys",
              "invalid_arguments",
              "invalid_return_type",
              "invalid_date",
              "invalid_string",
              "too_small",
              "too_big",
              "invalid_intersection_types",
              "not_multiple_of",
              "not_finite"
            ]
          }
        },
        "required": ["message", "path", "code"]
      },
      "BodyValidationError": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZodIssue"
            }
          }
        },
        "required": ["issues"]
      },
      "InsufficientPermissionsError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "enum": ["Forbidden"]
          }
        },
        "required": ["message"]
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": ["message"]
      },
      "PathValidationError": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZodIssue"
            }
          }
        },
        "required": ["issues"]
      },
      "QueryValidationError": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZodIssue"
            }
          }
        },
        "required": ["issues"]
      },
      "DestinyMembershipType": {
        "type": "integer",
        "enum": [0, 1, 2, 3, 4, 5, 6, -1],
        "externalDocs": {
          "url": "https://bungie-net.github.io/#/components/schemas/BungieMembershipType"
        }
      },
      "Instance": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "format": "int64"
          },
          "hash": {
            "type": "integer",
            "minimum": 0,
            "format": "uint32"
          },
          "activityId": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "versionId": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "completed": {
            "type": "boolean"
          },
          "flawless": {
            "type": "boolean",
            "nullable": true
          },
          "fresh": {
            "type": "boolean",
            "nullable": true
          },
          "playerCount": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "score": {
            "type": "integer",
            "minimum": 0
          },
          "dateStarted": {
            "type": "string",
            "format": "date-time"
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time"
          },
          "season": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "duration": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Activity duration in seconds"
          },
          "platformType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinyMembershipType"
              },
              {
                "description": "If all players are on the same platform, this will be the platform type. Otherwise, it will be `0`."
              }
            ]
          },
          "isDayOne": {
            "type": "boolean",
            "description": "If the activity was completed before the day one end date"
          },
          "isContest": {
            "type": "boolean",
            "description": "If the activity was completed before the contest end date"
          },
          "isWeekOne": {
            "type": "boolean",
            "description": "If the activity was completed before the week one end date"
          }
        },
        "required": [
          "instanceId",
          "hash",
          "activityId",
          "versionId",
          "completed",
          "flawless",
          "fresh",
          "playerCount",
          "score",
          "dateStarted",
          "dateCompleted",
          "season",
          "duration",
          "platformType",
          "isDayOne",
          "isContest",
          "isWeekOne"
        ],
        "additionalProperties": false
      },
      "InstanceMetadata": {
        "type": "object",
        "properties": {
          "activityName": {
            "type": "string"
          },
          "versionName": {
            "type": "string"
          },
          "isRaid": {
            "type": "boolean"
          }
        },
        "required": ["activityName", "versionName", "isRaid"]
      },
      "InstanceCharacterWeapon": {
        "type": "object",
        "properties": {
          "weaponHash": {
            "type": "integer",
            "minimum": 0,
            "format": "uint32"
          },
          "kills": {
            "type": "integer",
            "minimum": 0
          },
          "precisionKills": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": ["weaponHash", "kills", "precisionKills"],
        "additionalProperties": false
      },
      "InstanceCharacter": {
        "type": "object",
        "properties": {
          "characterId": {
            "type": "string",
            "format": "int64"
          },
          "classHash": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "format": "uint32"
          },
          "emblemHash": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "format": "uint32"
          },
          "completed": {
            "type": "boolean"
          },
          "timePlayedSeconds": {
            "type": "integer",
            "minimum": 0
          },
          "startSeconds": {
            "type": "integer",
            "minimum": 0
          },
          "score": {
            "type": "integer",
            "minimum": 0
          },
          "kills": {
            "type": "integer",
            "minimum": 0
          },
          "deaths": {
            "type": "integer",
            "minimum": 0
          },
          "assists": {
            "type": "integer",
            "minimum": 0
          },
          "precisionKills": {
            "type": "integer",
            "minimum": 0
          },
          "superKills": {
            "type": "integer",
            "minimum": 0
          },
          "grenadeKills": {
            "type": "integer",
            "minimum": 0
          },
          "meleeKills": {
            "type": "integer",
            "minimum": 0
          },
          "weapons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceCharacterWeapon"
            }
          }
        },
        "required": [
          "characterId",
          "classHash",
          "emblemHash",
          "completed",
          "timePlayedSeconds",
          "startSeconds",
          "score",
          "kills",
          "deaths",
          "assists",
          "precisionKills",
          "superKills",
          "grenadeKills",
          "meleeKills",
          "weapons"
        ],
        "additionalProperties": false
      },
      "InstancePlayer": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean"
          },
          "isFirstClear": {
            "type": "boolean"
          },
          "sherpas": {
            "type": "integer",
            "minimum": 0
          },
          "timePlayedSeconds": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "completed",
          "isFirstClear",
          "sherpas",
          "timePlayedSeconds"
        ],
        "additionalProperties": false
      },
      "PlayerInfo": {
        "type": "object",
        "properties": {
          "membershipId": {
            "type": "string",
            "format": "int64"
          },
          "membershipType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinyMembershipType"
              },
              {
                "nullable": true,
                "description": "The platform on which the player created their account."
              }
            ]
          },
          "iconPath": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "description": "The platform-specific display name of the player. No longer shown in-game."
          },
          "bungieGlobalDisplayName": {
            "type": "string",
            "nullable": true
          },
          "bungieGlobalDisplayNameCode": {
            "type": "string",
            "nullable": true
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "Whether or not the player has chosen to hide their on Bungie.net."
          }
        },
        "required": [
          "membershipId",
          "membershipType",
          "iconPath",
          "displayName",
          "bungieGlobalDisplayName",
          "bungieGlobalDisplayNameCode",
          "lastSeen",
          "isPrivate"
        ],
        "additionalProperties": false,
        "example": {
          "bungieGlobalDisplayName": "Newo",
          "bungieGlobalDisplayNameCode": "9010",
          "membershipId": "4611686018488107374",
          "displayName": "xx_newo_xx",
          "iconPath": "/common/destiny2_content/icons/93844c8b76ea80683a880479e3506980.jpg",
          "membershipType": 3,
          "lastSeen": "2021-05-01T00:00:00.000Z",
          "isPrivate": false
        }
      },
      "InstancePlayerExtended": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InstancePlayer"
          },
          {
            "type": "object",
            "properties": {
              "playerInfo": {
                "$ref": "#/components/schemas/PlayerInfo"
              },
              "characters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InstanceCharacter"
                }
              }
            },
            "required": ["playerInfo", "characters"],
            "additionalProperties": false
          }
        ]
      },
      "InstanceExtended": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Instance"
          },
          {
            "type": "object",
            "properties": {
              "leaderboardRank": {
                "type": "integer",
                "nullable": true,
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "metadata": {
                "$ref": "#/components/schemas/InstanceMetadata"
              },
              "players": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InstancePlayerExtended"
                }
              }
            },
            "required": ["leaderboardRank", "metadata", "players"],
            "additionalProperties": false
          }
        ]
      },
      "ClanBannerData": {
        "type": "object",
        "properties": {
          "decalId": {
            "type": "integer",
            "minimum": 0
          },
          "decalColorId": {
            "type": "integer",
            "minimum": 0
          },
          "decalBackgroundColorId": {
            "type": "integer",
            "minimum": 0
          },
          "gonfalonId": {
            "type": "integer",
            "minimum": 0
          },
          "gonfalonColorId": {
            "type": "integer",
            "minimum": 0
          },
          "gonfalonDetailId": {
            "type": "integer",
            "minimum": 0
          },
          "gonfalonDetailColorId": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "decalId",
          "decalColorId",
          "decalBackgroundColorId",
          "gonfalonId",
          "gonfalonColorId",
          "gonfalonDetailId",
          "gonfalonDetailColorId"
        ],
        "additionalProperties": false
      },
      "Clan": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "callSign": {
            "type": "string"
          },
          "motto": {
            "type": "string"
          },
          "clanBannerData": {
            "$ref": "#/components/schemas/ClanBannerData"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "knownMemberCount": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          }
        },
        "required": [
          "groupId",
          "name",
          "callSign",
          "motto",
          "clanBannerData",
          "lastUpdated",
          "knownMemberCount"
        ]
      },
      "ClanAggregateStats": {
        "type": "object",
        "properties": {
          "clears": {
            "type": "integer",
            "minimum": 0
          },
          "averageClears": {
            "type": "integer",
            "minimum": 0
          },
          "freshClears": {
            "type": "integer",
            "minimum": 0
          },
          "averageFreshClears": {
            "type": "integer",
            "minimum": 0
          },
          "sherpas": {
            "type": "integer",
            "minimum": 0
          },
          "averageSherpas": {
            "type": "integer",
            "minimum": 0
          },
          "timePlayedSeconds": {
            "type": "integer",
            "minimum": 0
          },
          "averageTimePlayedSeconds": {
            "type": "integer",
            "minimum": 0
          },
          "totalContestScore": {
            "type": "number",
            "minimum": 0
          },
          "weightedContestScore": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "clears",
          "averageClears",
          "freshClears",
          "averageFreshClears",
          "sherpas",
          "averageSherpas",
          "timePlayedSeconds",
          "averageTimePlayedSeconds",
          "totalContestScore",
          "weightedContestScore"
        ]
      },
      "ClanLeaderboardEntry": {
        "type": "object",
        "properties": {
          "clan": {
            "$ref": "#/components/schemas/Clan"
          },
          "clears": {
            "type": "integer",
            "minimum": 0
          },
          "averageClears": {
            "type": "integer",
            "minimum": 0
          },
          "freshClears": {
            "type": "integer",
            "minimum": 0
          },
          "averageFreshClears": {
            "type": "integer",
            "minimum": 0
          },
          "sherpas": {
            "type": "integer",
            "minimum": 0
          },
          "averageSherpas": {
            "type": "integer",
            "minimum": 0
          },
          "timePlayedSeconds": {
            "type": "integer",
            "minimum": 0
          },
          "averageTimePlayedSeconds": {
            "type": "integer",
            "minimum": 0
          },
          "totalContestScore": {
            "type": "number",
            "minimum": 0
          },
          "weightedContestScore": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "clan",
          "clears",
          "averageClears",
          "freshClears",
          "averageFreshClears",
          "sherpas",
          "averageSherpas",
          "timePlayedSeconds",
          "averageTimePlayedSeconds",
          "totalContestScore",
          "weightedContestScore"
        ]
      },
      "ClanMemberStats": {
        "type": "object",
        "properties": {
          "clears": {
            "type": "integer",
            "minimum": 0
          },
          "freshClears": {
            "type": "integer",
            "minimum": 0
          },
          "sherpas": {
            "type": "integer",
            "minimum": 0
          },
          "totalTimePlayedSeconds": {
            "type": "integer",
            "minimum": 0
          },
          "contestScore": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "clears",
          "freshClears",
          "sherpas",
          "totalTimePlayedSeconds",
          "contestScore"
        ]
      },
      "ClanStats": {
        "type": "object",
        "properties": {
          "aggregateStats": {
            "$ref": "#/components/schemas/ClanAggregateStats"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "playerInfo": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PlayerInfo"
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "stats": {
                  "$ref": "#/components/schemas/ClanMemberStats"
                }
              },
              "required": ["playerInfo", "stats"]
            }
          }
        },
        "required": ["aggregateStats", "members"]
      },
      "TeamLeaderboardEntry": {
        "type": "object",
        "properties": {
          "position": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "rank": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "value": {
            "type": "number"
          },
          "instanceId": {
            "type": "string",
            "format": "int64"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerInfo"
            }
          }
        },
        "required": ["position", "rank", "value", "instanceId", "players"]
      },
      "IndividualLeaderboardEntry": {
        "type": "object",
        "properties": {
          "position": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "rank": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "value": {
            "type": "number"
          },
          "playerInfo": {
            "$ref": "#/components/schemas/PlayerInfo"
          }
        },
        "required": ["position", "rank", "value", "playerInfo"]
      },
      "LeaderboardData": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["team"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TeamLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["individual"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndividualLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          }
        ]
      },
      "LeaderboardPagination": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 10,
            "maximum": 100,
            "default": 50
          },
          "search": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true,
            "default": 1,
            "description": "Page number of leaderboard data. Ignored if `search` is provided. Defaults to 1"
          }
        },
        "description": "Pagination parameters for leaderboard data"
      },
      "ActivityDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "isSunset": {
            "type": "boolean"
          },
          "isRaid": {
            "type": "boolean"
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "dayOneEnd": {
            "type": "string",
            "format": "date-time"
          },
          "contestEnd": {
            "type": "string",
            "format": "date-time"
          },
          "weekOneEnd": {
            "type": "string",
            "format": "date-time"
          },
          "milestoneHash": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "format": "uint32"
          }
        },
        "required": [
          "id",
          "name",
          "path",
          "isSunset",
          "isRaid",
          "releaseDate",
          "dayOneEnd",
          "contestEnd",
          "weekOneEnd",
          "milestoneHash"
        ],
        "additionalProperties": false,
        "description": "The definition of an activity in the RaidHub database.",
        "example": {
          "id": 9,
          "name": "Vault of Glass",
          "path": "vaultofglass",
          "isSunset": false,
          "isRaid": true,
          "releaseDate": "2021-05-22T00:00:00.000Z",
          "dayOneEnd": "2021-05-23T00:00:00.000Z",
          "contestEnd": "2021-05-23T00:00:00.000Z",
          "weekOneEnd": "2021-05-25T00:00:00.000Z",
          "milestoneHash": 1888320892
        }
      },
      "VersionDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "associatedActivityId": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "isChallengeMode": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "path",
          "associatedActivityId",
          "isChallengeMode"
        ],
        "additionalProperties": false,
        "description": "The definition of a version in the RaidHub database.",
        "examples": [
          {
            "id": 1,
            "name": "Standard",
            "path": "normal",
            "associatedActivityId": null,
            "isChallengeMode": false
          },
          {
            "id": 129,
            "name": "Oryx Exalted",
            "path": "oryx",
            "associatedActivityId": 101,
            "isChallengeMode": false
          }
        ]
      },
      "WeaponMetric": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "integer",
            "minimum": 0,
            "format": "uint32"
          },
          "totalUsage": {
            "type": "integer",
            "minimum": 0
          },
          "totalKills": {
            "type": "integer",
            "minimum": 0
          },
          "totalPrecisionKills": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": ["hash", "totalUsage", "totalKills", "totalPrecisionKills"]
      },
      "PopulationByRaidMetric": {
        "type": "object",
        "additionalProperties": {
          "type": "integer",
          "minimum": 0
        },
        "description": "A map of each activity Id to its player count"
      },
      "RaidHubPostGameCarnageReport": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "format": "date-time"
          },
          "startingPhaseIndex": {
            "type": "number"
          },
          "activityWasStartedFromBeginning": {
            "type": "boolean"
          },
          "activityDetails": {
            "type": "object",
            "properties": {
              "directorActivityHash": {
                "type": "integer",
                "minimum": 0,
                "format": "uint32"
              },
              "instanceId": {
                "type": "string",
                "format": "int64"
              },
              "mode": {
                "type": "integer",
                "enum": [
                  0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19,
                  20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39,
                  40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                  55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                  70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
                  85, 86, 87, 88, 89, 90, 91
                ]
              },
              "modes": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "enum": [
                    0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19,
                    20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39,
                    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                    70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
                    85, 86, 87, 88, 89, 90, 91
                  ]
                }
              },
              "membershipType": {
                "$ref": "#/components/schemas/DestinyMembershipType"
              }
            },
            "required": [
              "directorActivityHash",
              "instanceId",
              "mode",
              "modes",
              "membershipType"
            ]
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "player": {
                  "type": "object",
                  "properties": {
                    "destinyUserInfo": {
                      "type": "object",
                      "properties": {
                        "iconPath": {
                          "type": "string",
                          "nullable": true
                        },
                        "crossSaveOverride": {
                          "$ref": "#/components/schemas/DestinyMembershipType"
                        },
                        "applicableMembershipTypes": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "$ref": "#/components/schemas/DestinyMembershipType"
                          }
                        },
                        "membershipType": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/DestinyMembershipType"
                            },
                            {
                              "nullable": true
                            }
                          ]
                        },
                        "membershipId": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string",
                          "nullable": true
                        },
                        "bungieGlobalDisplayName": {
                          "type": "string",
                          "nullable": true
                        },
                        "bungieGlobalDisplayNameCode": {
                          "type": "number",
                          "nullable": true
                        }
                      },
                      "required": ["crossSaveOverride", "membershipId"]
                    },
                    "characterClass": {
                      "type": "string",
                      "nullable": true
                    },
                    "classHash": {
                      "type": "integer",
                      "minimum": 0,
                      "format": "uint32"
                    },
                    "raceHash": {
                      "type": "integer",
                      "minimum": 0,
                      "format": "uint32"
                    },
                    "genderHash": {
                      "type": "integer",
                      "minimum": 0,
                      "format": "uint32"
                    },
                    "characterLevel": {
                      "type": "number"
                    },
                    "lightLevel": {
                      "type": "number"
                    },
                    "emblemHash": {
                      "type": "integer",
                      "minimum": 0,
                      "format": "uint32"
                    }
                  },
                  "required": [
                    "destinyUserInfo",
                    "classHash",
                    "raceHash",
                    "genderHash",
                    "characterLevel",
                    "lightLevel",
                    "emblemHash"
                  ]
                },
                "characterId": {
                  "type": "string"
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "basic": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "displayValue": {
                            "type": "string"
                          }
                        },
                        "required": ["value", "displayValue"]
                      }
                    },
                    "required": ["basic"]
                  }
                },
                "extended": {
                  "type": "object",
                  "properties": {
                    "weapons": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "referenceId": {
                            "type": "number"
                          },
                          "values": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "basic": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "displayValue": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["value", "displayValue"]
                                }
                              },
                              "required": ["basic"]
                            }
                          }
                        },
                        "required": ["referenceId", "values"]
                      }
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "basic": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "displayValue": {
                                "type": "string"
                              }
                            },
                            "required": ["value", "displayValue"]
                          }
                        },
                        "required": ["basic"]
                      }
                    }
                  },
                  "required": ["values"]
                }
              },
              "required": ["player", "characterId", "values"]
            }
          }
        },
        "required": ["period", "activityDetails", "entries"],
        "description": "A raw PGCR with a few redundant fields removed",
        "externalDocs": {
          "description": "Bungie.net API documentation",
          "url": "https://bungie-net.github.io/multi/schema_Destiny-HistoricalStats-DestinyPostGameCarnageReportData.html#schema_Destiny-HistoricalStats-DestinyPostGameCarnageReportData"
        }
      },
      "InstanceForPlayer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Instance"
          },
          {
            "type": "object",
            "properties": {
              "player": {
                "$ref": "#/components/schemas/InstancePlayer"
              }
            },
            "required": ["player"],
            "additionalProperties": false
          }
        ]
      },
      "InstanceWithPlayers": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Instance"
          },
          {
            "type": "object",
            "properties": {
              "players": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlayerInfo"
                }
              }
            },
            "required": ["players"],
            "additionalProperties": false
          }
        ]
      },
      "PlayerProfileActivityStats": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "freshClears": {
            "type": "integer",
            "minimum": 0
          },
          "clears": {
            "type": "integer",
            "minimum": 0
          },
          "sherpas": {
            "type": "integer",
            "minimum": 0
          },
          "fastestInstance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Instance"
              },
              {
                "nullable": true
              }
            ]
          }
        },
        "required": [
          "activityId",
          "freshClears",
          "clears",
          "sherpas",
          "fastestInstance"
        ]
      },
      "GlobalStat": {
        "type": "object",
        "properties": {
          "rank": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "value": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": ["rank", "value"]
      },
      "PlayerProfileGlobalStats": {
        "type": "object",
        "properties": {
          "clears": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GlobalStat"
              },
              {
                "nullable": true
              }
            ]
          },
          "freshClears": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GlobalStat"
              },
              {
                "nullable": true
              }
            ]
          },
          "sherpas": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GlobalStat"
              },
              {
                "nullable": true
              }
            ]
          },
          "sumOfBest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GlobalStat"
              },
              {
                "nullable": true
              }
            ]
          }
        },
        "required": ["clears", "freshClears", "sherpas", "sumOfBest"]
      },
      "WorldFirstEntry": {
        "type": "object",
        "properties": {
          "activityId": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "instanceId": {
            "type": "string",
            "format": "int64"
          },
          "timeAfterLaunch": {
            "type": "integer",
            "minimum": 0
          },
          "rank": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "isDayOne": {
            "type": "boolean"
          },
          "isContest": {
            "type": "boolean"
          },
          "isWeekOne": {
            "type": "boolean"
          },
          "isChallengeMode": {
            "type": "boolean"
          }
        },
        "required": [
          "activityId",
          "instanceId",
          "timeAfterLaunch",
          "rank",
          "isDayOne",
          "isContest",
          "isWeekOne",
          "isChallengeMode"
        ]
      },
      "PlayerProfile": {
        "type": "object",
        "properties": {
          "playerInfo": {
            "$ref": "#/components/schemas/PlayerInfo"
          },
          "stats": {
            "type": "object",
            "properties": {
              "global": {
                "$ref": "#/components/schemas/PlayerProfileGlobalStats"
              },
              "activity": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/PlayerProfileActivityStats"
                }
              }
            },
            "required": ["global", "activity"]
          },
          "worldFirstEntries": {
            "type": "object",
            "additionalProperties": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WorldFirstEntry"
                },
                {
                  "nullable": true
                }
              ]
            }
          }
        },
        "required": ["playerInfo", "stats", "worldFirstEntries"]
      },
      "Teammate": {
        "type": "object",
        "properties": {
          "estimatedTimePlayedSeconds": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "clears": {
            "type": "integer",
            "minimum": 0
          },
          "instanceCount": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "playerInfo": {
            "$ref": "#/components/schemas/PlayerInfo"
          }
        },
        "required": [
          "estimatedTimePlayedSeconds",
          "clears",
          "instanceCount",
          "playerInfo"
        ],
        "additionalProperties": false
      },
      "ManifestResponse": {
        "type": "object",
        "properties": {
          "hashes": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "activityId": {
                  "type": "integer",
                  "minimum": 0,
                  "exclusiveMinimum": true
                },
                "versionId": {
                  "type": "integer",
                  "minimum": 0,
                  "exclusiveMinimum": true
                }
              },
              "required": ["activityId", "versionId"]
            },
            "description": "The mapping of each Bungie.net hash to a RaidHub activityId and versionId"
          },
          "activityDefinitions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ActivityDefinition"
            },
            "description": "The mapping of each RaidHub activityId to its definition"
          },
          "versionDefinitions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/VersionDefinition"
            },
            "description": "The mapping of each RaidHub versionId to its definition"
          },
          "listedRaidIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "minItems": 8,
            "description": "The list of all activityId in order of newest to oldest"
          },
          "sunsetRaidIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "description": "The list of inactive raid activityId"
          },
          "prestigeRaidIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "minItems": 3,
            "description": "The list of raid activityId which had a prestige mode"
          },
          "masterRaidIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "minItems": 5,
            "description": "The list of raid activityId which have a master mode"
          },
          "contestRaidIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "minItems": 8,
            "description": "The list of raid activityId which had a contest mode"
          },
          "resprisedRaidIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "minItems": 3,
            "description": "The list of raid activityId which have been reprised from Destiny 1"
          },
          "resprisedChallengeVersionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "minItems": 3,
            "description": "The list of version versionId which are the challenge mode for reprised raids"
          },
          "pantheonIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "minItems": 1,
            "description": "The list of activityId for Pantheon"
          },
          "versionsForActivity": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "minItems": 1
            },
            "description": "The set of versionId for each activityId"
          }
        },
        "required": [
          "hashes",
          "activityDefinitions",
          "versionDefinitions",
          "listedRaidIds",
          "sunsetRaidIds",
          "prestigeRaidIds",
          "masterRaidIds",
          "contestRaidIds",
          "resprisedRaidIds",
          "resprisedChallengeVersionIds",
          "pantheonIds",
          "versionsForActivity"
        ],
        "additionalProperties": false
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "AtlasPGCR": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": ["Crawling", "Idle", "Offline"]
              },
              "medianSecondsBehindNow": {
                "type": "number",
                "nullable": true
              },
              "estimatedCatchUpTimestamp": {
                "type": "string",
                "format": "date-time"
              },
              "latestActivity": {
                "type": "object",
                "properties": {
                  "dateCompleted": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "instanceId": {
                    "type": "string"
                  }
                },
                "required": ["dateCompleted", "instanceId"]
              }
            },
            "required": [
              "status",
              "medianSecondsBehindNow",
              "estimatedCatchUpTimestamp",
              "latestActivity"
            ]
          }
        },
        "required": ["AtlasPGCR"]
      },
      "PlayerSearchResponse": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "query": {
                "type": "string"
              }
            },
            "required": ["count", "query"]
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerInfo"
            }
          }
        },
        "required": ["params", "results"],
        "additionalProperties": false
      },
      "PlayerActivitiesResponse": {
        "type": "object",
        "properties": {
          "membershipId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "nextCursor": {
            "type": "string",
            "format": "date-time"
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstanceForPlayer"
            }
          }
        },
        "required": ["membershipId", "nextCursor", "activities"],
        "additionalProperties": false
      },
      "PlayerNotFoundError": {
        "type": "object",
        "properties": {
          "membershipId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          }
        },
        "required": ["membershipId"]
      },
      "PlayerPrivateProfileError": {
        "type": "object",
        "properties": {
          "membershipId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          }
        },
        "required": ["membershipId"]
      },
      "PlayerBasicResponse": {
        "type": "object",
        "properties": {
          "membershipId": {
            "type": "string",
            "format": "int64"
          },
          "membershipType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinyMembershipType"
              },
              {
                "nullable": true,
                "description": "The platform on which the player created their account."
              }
            ]
          },
          "iconPath": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "description": "The platform-specific display name of the player. No longer shown in-game."
          },
          "bungieGlobalDisplayName": {
            "type": "string",
            "nullable": true
          },
          "bungieGlobalDisplayNameCode": {
            "type": "string",
            "nullable": true
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "Whether or not the player has chosen to hide their on Bungie.net."
          }
        },
        "required": [
          "membershipId",
          "membershipType",
          "iconPath",
          "displayName",
          "bungieGlobalDisplayName",
          "bungieGlobalDisplayNameCode",
          "lastSeen",
          "isPrivate"
        ],
        "additionalProperties": false,
        "example": {
          "bungieGlobalDisplayName": "Newo",
          "bungieGlobalDisplayNameCode": "9010",
          "membershipId": "4611686018488107374",
          "displayName": "xx_newo_xx",
          "iconPath": "/common/destiny2_content/icons/93844c8b76ea80683a880479e3506980.jpg",
          "membershipType": 3,
          "lastSeen": "2021-05-01T00:00:00.000Z",
          "isPrivate": false
        }
      },
      "PlayerProfileResponse": {
        "type": "object",
        "properties": {
          "playerInfo": {
            "$ref": "#/components/schemas/PlayerInfo"
          },
          "stats": {
            "type": "object",
            "properties": {
              "global": {
                "$ref": "#/components/schemas/PlayerProfileGlobalStats"
              },
              "activity": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/PlayerProfileActivityStats"
                }
              }
            },
            "required": ["global", "activity"]
          },
          "worldFirstEntries": {
            "type": "object",
            "additionalProperties": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/WorldFirstEntry"
                },
                {
                  "nullable": true
                }
              ]
            }
          }
        },
        "required": ["playerInfo", "stats", "worldFirstEntries"]
      },
      "PlayerTeammatesResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Teammate"
        }
      },
      "PlayerInstancesResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/InstanceWithPlayers"
        }
      },
      "PlayerProtectedResourceError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "membershipId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          }
        },
        "required": ["message", "membershipId"]
      },
      "ActivityResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Instance"
          },
          {
            "type": "object",
            "properties": {
              "leaderboardRank": {
                "type": "integer",
                "nullable": true,
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "metadata": {
                "$ref": "#/components/schemas/InstanceMetadata"
              },
              "players": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InstancePlayerExtended"
                }
              }
            },
            "required": ["leaderboardRank", "metadata", "players"],
            "additionalProperties": false
          }
        ]
      },
      "InstanceNotFoundError": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          }
        },
        "required": ["instanceId"]
      },
      "LeaderboardIndividualGlobalResponse": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["team"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TeamLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["individual"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndividualLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          }
        ]
      },
      "PlayerNotOnLeaderboardError": {
        "type": "object",
        "properties": {
          "membershipId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          }
        },
        "required": ["membershipId"]
      },
      "LeaderboardIndividualRaidResponse": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["team"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TeamLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["individual"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndividualLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          }
        ]
      },
      "RaidNotFoundError": {
        "type": "object",
        "properties": {
          "raid": {
            "type": "string"
          }
        },
        "required": ["raid"]
      },
      "LeaderboardIndividualPantheonResponse": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["team"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TeamLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["individual"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndividualLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          }
        ]
      },
      "PantheonVersionNotFoundError": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        },
        "required": ["path"]
      },
      "LeaderboardTeamFirstResponse": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["team"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TeamLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["individual"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndividualLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          }
        ]
      },
      "InvalidActivityVersionComboError": {
        "type": "object",
        "properties": {
          "activity": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": ["activity", "version"]
      },
      "LeaderboardTeamContestResponse": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["team"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TeamLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["individual"]
              },
              "format": {
                "type": "string",
                "enum": ["duration", "numerical"]
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "entries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndividualLeaderboardEntry"
                }
              }
            },
            "required": ["type", "format", "page", "count", "entries"]
          }
        ]
      },
      "LeaderboardClanResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ClanLeaderboardEntry"
        }
      },
      "PgcrResponse": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "format": "date-time"
          },
          "startingPhaseIndex": {
            "type": "number"
          },
          "activityWasStartedFromBeginning": {
            "type": "boolean"
          },
          "activityDetails": {
            "type": "object",
            "properties": {
              "directorActivityHash": {
                "type": "integer",
                "minimum": 0,
                "format": "uint32"
              },
              "instanceId": {
                "type": "string",
                "format": "int64"
              },
              "mode": {
                "type": "integer",
                "enum": [
                  0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19,
                  20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39,
                  40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                  55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                  70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
                  85, 86, 87, 88, 89, 90, 91
                ]
              },
              "modes": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "enum": [
                    0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19,
                    20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39,
                    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                    70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
                    85, 86, 87, 88, 89, 90, 91
                  ]
                }
              },
              "membershipType": {
                "$ref": "#/components/schemas/DestinyMembershipType"
              }
            },
            "required": [
              "directorActivityHash",
              "instanceId",
              "mode",
              "modes",
              "membershipType"
            ]
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "player": {
                  "type": "object",
                  "properties": {
                    "destinyUserInfo": {
                      "type": "object",
                      "properties": {
                        "iconPath": {
                          "type": "string",
                          "nullable": true
                        },
                        "crossSaveOverride": {
                          "$ref": "#/components/schemas/DestinyMembershipType"
                        },
                        "applicableMembershipTypes": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "$ref": "#/components/schemas/DestinyMembershipType"
                          }
                        },
                        "membershipType": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/DestinyMembershipType"
                            },
                            {
                              "nullable": true
                            }
                          ]
                        },
                        "membershipId": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string",
                          "nullable": true
                        },
                        "bungieGlobalDisplayName": {
                          "type": "string",
                          "nullable": true
                        },
                        "bungieGlobalDisplayNameCode": {
                          "type": "number",
                          "nullable": true
                        }
                      },
                      "required": ["crossSaveOverride", "membershipId"]
                    },
                    "characterClass": {
                      "type": "string",
                      "nullable": true
                    },
                    "classHash": {
                      "type": "integer",
                      "minimum": 0,
                      "format": "uint32"
                    },
                    "raceHash": {
                      "type": "integer",
                      "minimum": 0,
                      "format": "uint32"
                    },
                    "genderHash": {
                      "type": "integer",
                      "minimum": 0,
                      "format": "uint32"
                    },
                    "characterLevel": {
                      "type": "number"
                    },
                    "lightLevel": {
                      "type": "number"
                    },
                    "emblemHash": {
                      "type": "integer",
                      "minimum": 0,
                      "format": "uint32"
                    }
                  },
                  "required": [
                    "destinyUserInfo",
                    "classHash",
                    "raceHash",
                    "genderHash",
                    "characterLevel",
                    "lightLevel",
                    "emblemHash"
                  ]
                },
                "characterId": {
                  "type": "string"
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "basic": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "displayValue": {
                            "type": "string"
                          }
                        },
                        "required": ["value", "displayValue"]
                      }
                    },
                    "required": ["basic"]
                  }
                },
                "extended": {
                  "type": "object",
                  "properties": {
                    "weapons": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "referenceId": {
                            "type": "number"
                          },
                          "values": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "basic": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "displayValue": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["value", "displayValue"]
                                }
                              },
                              "required": ["basic"]
                            }
                          }
                        },
                        "required": ["referenceId", "values"]
                      }
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "basic": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "displayValue": {
                                "type": "string"
                              }
                            },
                            "required": ["value", "displayValue"]
                          }
                        },
                        "required": ["basic"]
                      }
                    }
                  },
                  "required": ["values"]
                }
              },
              "required": ["player", "characterId", "values"]
            }
          }
        },
        "required": ["period", "activityDetails", "entries"],
        "description": "A raw PGCR with a few redundant fields removed",
        "externalDocs": {
          "description": "Bungie.net API documentation",
          "url": "https://bungie-net.github.io/multi/schema_Destiny-HistoricalStats-DestinyPostGameCarnageReportData.html#schema_Destiny-HistoricalStats-DestinyPostGameCarnageReportData"
        }
      },
      "PGCRNotFoundError": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          }
        },
        "required": ["instanceId"]
      },
      "ClanResponse": {
        "type": "object",
        "properties": {
          "aggregateStats": {
            "$ref": "#/components/schemas/ClanAggregateStats"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "playerInfo": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PlayerInfo"
                    },
                    {
                      "nullable": true
                    }
                  ]
                },
                "stats": {
                  "$ref": "#/components/schemas/ClanMemberStats"
                }
              },
              "required": ["playerInfo", "stats"]
            }
          }
        },
        "required": ["aggregateStats", "members"]
      },
      "ClanNotFoundError": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          }
        },
        "required": ["groupId"]
      },
      "BungieServiceOffline": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "route": {
            "type": "string"
          }
        },
        "required": ["message", "route"]
      },
      "MetricsWeaponsRollingWeekResponse": {
        "type": "object",
        "properties": {
          "energy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeaponMetric"
            }
          },
          "kinetic": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeaponMetric"
            }
          },
          "power": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeaponMetric"
            }
          }
        },
        "required": ["energy", "kinetic", "power"]
      },
      "MetricsPopulationRollingDayResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "hour": {
              "type": "string",
              "format": "date-time"
            },
            "population": {
              "$ref": "#/components/schemas/PopulationByRaidMetric"
            }
          },
          "required": ["hour", "population"]
        }
      },
      "AdminQueryResponse": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["SELECT"]
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "nullable": true
                  }
                }
              }
            },
            "required": ["type", "data"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["HIGH COST"]
              },
              "data": {
                "nullable": true
              },
              "cost": {
                "type": "number"
              },
              "estimatedDuration": {
                "type": "number"
              }
            },
            "required": ["type", "data", "cost", "estimatedDuration"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["EXPLAIN"]
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": ["type", "data"]
          }
        ]
      },
      "AdminQuerySyntaxError": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "line": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          }
        },
        "required": ["name"]
      },
      "AuthorizeAdminResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["value", "expires"]
      },
      "InvalidClientSecretError": {
        "type": "object",
        "properties": {}
      },
      "AuthorizeUserResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["value", "expires"]
      }
    },
    "parameters": {},
    "securitySchemes": {
      "API Key": {
        "type": "apiKey",
        "name": "X-API-KEY",
        "in": "header"
      },
      "Bearer Token": {
        "type": "http",
        "name": "Authorization",
        "scheme": "bearer",
        "in": "header"
      },
      "Administrator Token": {
        "type": "http",
        "name": "Authorization",
        "scheme": "bearer",
        "in": "header"
      }
    }
  },
  "paths": {
    "/manifest": {
      "get": {
        "summary": "/manifest",
        "description": "The RaidHub manifest provides definitions for all activities and versions in the RaidHub database.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/ManifestResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "/status",
        "description": "Get the status of the RaidHub Services.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/StatusResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/player/search": {
      "get": {
        "summary": "/player/search",
        "description": "Search for players in the RaidHub database by Bungie name or platform display name. \nPlayers who have not attempted a raid may not appear in the search results. \nResults are ordered by a combination of the number of raid completions and last played date.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 20
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 40
            },
            "required": true,
            "name": "query",
            "in": "query"
          },
          {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DestinyMembershipType"
                },
                {
                  "default": -1,
                  "description": "Filter by Destiny membership type. Defaults to -1 (all). Note that the membership type of an account is determined by the platform the was first created on"
                }
              ]
            },
            "required": false,
            "name": "membershipType",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean",
              "default": true,
              "description": "Search by bungie name. Defaults to true. Set this parameter to false to search by platform display name instead"
            },
            "required": false,
            "name": "global",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/PlayerSearchResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["QueryValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/QueryValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/player/{membershipId}/activities": {
      "get": {
        "summary": "/player/{membershipId}/activities",
        "description": "Get a player's activity history. This endpoint uses date cursors to paginate through a player's activity history. \nThe first request should not include a cursor. Subsequent requests should include the `nextCursor` \nvalue from the previous response. Note that the first request may not return the full number of activities requested\nin order to optimize performance. Subsequent requests will return the full number of activities requested.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "membershipId",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 10,
              "maximum": 5000,
              "default": 2000
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "name": "cursor",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/PlayerActivitiesResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["QueryValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/QueryValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "403": {
            "description": "PlayerPrivateProfileError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["PlayerPrivateProfileError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/PlayerPrivateProfileError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PlayerNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PlayerNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/player/{membershipId}/basic": {
      "get": {
        "summary": "/player/{membershipId}/basic",
        "description": "An extremely low-cost API call. Get basic information Bungie information about a player. The information is not\nguaranteed to be fully up-to-date, however, it should be accurate enough for most use cases where\nyou only have the membershipId available.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "membershipId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/PlayerBasicResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PlayerNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PlayerNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/player/{membershipId}/profile": {
      "get": {
        "summary": "/player/{membershipId}/profile",
        "description": "Get a player's profile information. This includes global stats, activity stats, and world first entries. \nThis is used to hydrate the RaidHub profile page",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "membershipId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/PlayerProfileResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "403": {
            "description": "PlayerPrivateProfileError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["PlayerPrivateProfileError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/PlayerPrivateProfileError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PlayerNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PlayerNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/player/{membershipId}/teammates": {
      "get": {
        "summary": "/player/{membershipId}/teammates",
        "description": "Get a list of a player's top 100 teammates.",
        "security": [
          {
            "Bearer Token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "membershipId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/PlayerTeammatesResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "403": {
            "description": "PlayerPrivateProfileError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["PlayerPrivateProfileError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/PlayerPrivateProfileError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PlayerNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PlayerNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/player/{membershipId}/instances": {
      "get": {
        "summary": "/player/{membershipId}/instances",
        "description": "Find a set of instances based on the query parameters. Some parameters will not work together, such as providing a season outside the range of the min/max season. Requires authentication.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "membershipId",
            "in": "path"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^\\d+n?$"
              },
              "maxItems": 6,
              "default": [],
              "description": "A comma-separated list of up to 6 membershipIds the must be present in the instance. You do not need to include the target membershipId from the path parameter in this list."
            },
            "required": false,
            "name": "membershipIds",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": false,
            "name": "activityId",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": false,
            "name": "versionId",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "name": "completed",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "name": "fresh",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "required": false,
            "name": "flawless",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "minimum": 0
            },
            "required": false,
            "name": "minDurationSeconds",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "minimum": 0
            },
            "required": false,
            "name": "maxDurationSeconds",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": false,
            "name": "season",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": false,
            "name": "minSeason",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true
            },
            "required": false,
            "name": "maxSeason",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "name": "minDate",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "name": "maxDate",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/PlayerInstancesResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["QueryValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/QueryValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "403": {
            "description": "PlayerProtectedResourceError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["PlayerProtectedResourceError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/PlayerProtectedResourceError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PlayerNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PlayerNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/activity/{instanceId}": {
      "get": {
        "summary": "/activity/{instanceId}",
        "description": "This endpoint replaces the PGCR endpoint. It returns an object with a shape more aligned with how RaidHub displays PGCRs.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "instanceId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/ActivityResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["InstanceNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/InstanceNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/individual/global/{category}": {
      "get": {
        "summary": "/leaderboard/individual/global/{category}",
        "description": "Individual leaderboards across all raids",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "clears",
                "freshClears",
                "sherpas",
                "speedrun",
                "powerRankings"
              ]
            },
            "required": true,
            "name": "category",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 10,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": false,
            "name": "search",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1,
              "description": "Page number of leaderboard data. Ignored if `search` is provided. Defaults to 1"
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/LeaderboardIndividualGlobalResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["QueryValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/QueryValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PlayerNotOnLeaderboardError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PlayerNotOnLeaderboardError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/individual/raid/{raid}/{category}": {
      "get": {
        "summary": "/leaderboard/individual/raid/{raid}/{category}",
        "description": "Individual leaderboards for a specific raid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "raid",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["clears", "freshClears", "sherpas"]
            },
            "required": true,
            "name": "category",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 10,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": false,
            "name": "search",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1,
              "description": "Page number of leaderboard data. Ignored if `search` is provided. Defaults to 1"
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/LeaderboardIndividualRaidResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["QueryValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/QueryValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PlayerNotOnLeaderboardError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PlayerNotOnLeaderboardError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["RaidNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/RaidNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/individual/pantheon/{version}/{category}": {
      "get": {
        "summary": "/leaderboard/individual/pantheon/{version}/{category}",
        "description": "Individual leaderboards for a specific pantheon version",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "version",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["clears", "freshClears", "score"]
            },
            "required": true,
            "name": "category",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 10,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": false,
            "name": "search",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1,
              "description": "Page number of leaderboard data. Ignored if `search` is provided. Defaults to 1"
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/LeaderboardIndividualPantheonResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["QueryValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/QueryValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PlayerNotOnLeaderboardError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PlayerNotOnLeaderboardError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PantheonVersionNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PantheonVersionNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/team/first/{activity}/{version}": {
      "get": {
        "summary": "/leaderboard/team/first/{activity}/{version}",
        "description": "Ranking of the first 1000 completions of each activity version. \nUse the /contest endpoint instead to get the full rankings for the duration of the contest.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "activity",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "version",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 10,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": false,
            "name": "search",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1,
              "description": "Page number of leaderboard data. Ignored if `search` is provided. Defaults to 1"
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/LeaderboardTeamFirstResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["QueryValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/QueryValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PlayerNotOnLeaderboardError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PlayerNotOnLeaderboardError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["InvalidActivityVersionComboError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/InvalidActivityVersionComboError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/team/contest/{raid}": {
      "get": {
        "summary": "/leaderboard/team/contest/{raid}",
        "description": "Ranking of all teams which completed the official contest version of the raid during the contest period.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "raid",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 10,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": false,
            "name": "search",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1,
              "description": "Page number of leaderboard data. Ignored if `search` is provided. Defaults to 1"
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/LeaderboardTeamContestResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["QueryValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/QueryValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PlayerNotOnLeaderboardError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PlayerNotOnLeaderboardError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["RaidNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/RaidNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/clan": {
      "get": {
        "summary": "/leaderboard/clan",
        "description": "Get a page of the clan leaderboard based on query parameters",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 10,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "clears",
                "average_clears",
                "fresh_clears",
                "average_fresh_clears",
                "sherpas",
                "average_sherpas",
                "time_played_seconds",
                "average_time_played_seconds",
                "total_contest_score",
                "weighted_contest_score"
              ],
              "default": "weighted_contest_score"
            },
            "required": false,
            "name": "column",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/LeaderboardClanResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["QueryValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/QueryValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/pgcr/{instanceId}": {
      "get": {
        "summary": "/pgcr/{instanceId}",
        "description": "Get a raw post game carnage report by instanceId. \nThis is essentially the raw data from the Bungie API, with a few fields trimmed off. \nIt should be a subset of the data returned by the Bungie API. \nUseful if you need to access PGCRs when Bungie's API is down.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "instanceId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/PgcrResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PGCRNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PGCRNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/clan/{groupId}": {
      "get": {
        "summary": "/clan/{groupId}",
        "description": "Get the stats for a clan. Data updates weekly.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "groupId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/ClanResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["ClanNotFoundError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/ClanNotFoundError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "minted": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "success": {
                          "type": "boolean",
                          "enum": [false]
                        },
                        "code": {
                          "type": "string",
                          "enum": ["PathValidationError"]
                        },
                        "error": {
                          "$ref": "#/components/schemas/PathValidationError"
                        }
                      },
                      "required": ["minted", "success", "code", "error"]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "503": {
            "description": "BungieServiceOffline",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["BungieServiceOffline"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/BungieServiceOffline"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/metrics/weapons/rolling-week": {
      "get": {
        "summary": "/metrics/weapons/rolling-week",
        "description": "Wet the top weapons in each slot over the past 168 hours (7 days)",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": ["usage", "kills"],
              "default": "usage"
            },
            "required": false,
            "name": "sort",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "nullable": true,
              "minimum": 0,
              "maximum": 100,
              "default": 25,
              "description": "The number of weapons to return per slot"
            },
            "required": false,
            "name": "count",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/MetricsWeaponsRollingWeekResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["QueryValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/QueryValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/metrics/population/rolling-day": {
      "get": {
        "summary": "/metrics/population/rolling-day",
        "description": "Get the daily player population by raid",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/MetricsPopulationRollingDayResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/admin/query": {
      "post": {
        "summary": "/admin/query",
        "description": "Run a query against the database",
        "security": [
          {
            "Administrator Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["SELECT", "EXPLAIN"]
                  },
                  "ignoreCost": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": ["query", "type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/AdminQueryResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["BodyValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/BodyValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InsufficientPermissionsError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InsufficientPermissionsError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "501": {
            "description": "AdminQuerySyntaxError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["AdminQuerySyntaxError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/AdminQuerySyntaxError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/authorize/admin": {
      "post": {
        "summary": "/authorize/admin",
        "description": "Authorize an admin user. Requires the client secret.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bungieMembershipId": {
                    "type": "string",
                    "pattern": "^\\d+n?$"
                  },
                  "adminClientSecret": {
                    "type": "string"
                  }
                },
                "required": ["bungieMembershipId", "adminClientSecret"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/AuthorizeAdminResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["BodyValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/BodyValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "403": {
            "description": "InvalidClientSecretError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InvalidClientSecretError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InvalidClientSecretError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    },
    "/authorize/user": {
      "post": {
        "summary": "/authorize/user",
        "description": "Authenticate a user. Grants permission to access restricted resources.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bungieMembershipId": {
                    "type": "string",
                    "pattern": "^\\d+n?$"
                  },
                  "destinyMembershipIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "pattern": "^\\d+n?$"
                    }
                  },
                  "clientSecret": {
                    "type": "string"
                  }
                },
                "required": [
                  "bungieMembershipId",
                  "destinyMembershipIds",
                  "clientSecret"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "response": {
                      "$ref": "#/components/schemas/AuthorizeUserResponse"
                    }
                  },
                  "required": ["minted", "success", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["BodyValidationError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/BodyValidationError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["ApiKeyError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/ApiKeyError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "403": {
            "description": "InvalidClientSecretError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InvalidClientSecretError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InvalidClientSecretError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minted": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "code": {
                      "type": "string",
                      "enum": ["InternalServerError"]
                    },
                    "error": {
                      "$ref": "#/components/schemas/InternalServerError"
                    }
                  },
                  "required": ["minted", "success", "code", "error"]
                }
              }
            }
          }
        }
      }
    }
  }
}
