{
  "openapi": "3.0.0",
  "info": {
    "title": "RaidHub API",
    "description": "The Semi-public API for RaidHub",
    "version": "0.1.0",
    "contact": {
      "name": "RaidHub Admin",
      "email": "admin@raidhub.io"
    }
  },
  "servers": [
    {
      "url": "https://api.raidhub.io"
    }
  ],
  "security": [
    {
      "API Key": []
    }
  ],
  "components": {
    "schemas": {
      "BungieMembershipType": {
        "type": "integer",
        "enum": [0, 1, 2, 3, 4, 5, 6, 10, 254, -1],
        "externalDocs": {
          "url": "https://bungie-net.github.io/#/components/schemas/BungieMembershipType"
        }
      },
      "ActivityEnum": {
        "type": "integer",
        "enum": [13, 12, 11, 10, 9, 8, 7, 4, 6, 5, 3, 2, 1, 101]
      },
      "RaidEnum": {
        "type": "integer",
        "enum": [13, 12, 11, 10, 9, 8, 7, 4, 6, 5, 3, 2, 1]
      },
      "ActivityVersionEnum": {
        "type": "integer",
        "enum": [1, 2, 3, 4, 64, 65, 66, 128, 129, 130, 131]
      },
      "PlayerInfo": {
        "type": "object",
        "properties": {
          "membershipId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "membershipType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BungieMembershipType"
              },
              {
                "nullable": true,
                "description": "The platform on which the player created their account."
              }
            ]
          },
          "iconPath": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "description": "The platform-specific display name of the player. No longer shown in-game."
          },
          "bungieGlobalDisplayName": {
            "type": "string",
            "nullable": true
          },
          "bungieGlobalDisplayNameCode": {
            "type": "string",
            "nullable": true
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "membershipId",
          "membershipType",
          "iconPath",
          "displayName",
          "bungieGlobalDisplayName",
          "bungieGlobalDisplayNameCode",
          "lastSeen"
        ],
        "additionalProperties": false,
        "example": {
          "bungieGlobalDisplayName": "Newo",
          "bungieGlobalDisplayNameCode": "9010",
          "membershipId": "4611686018488107374",
          "displayName": "xx_newo_xx",
          "iconPath": "/common/destiny2_content/icons/93844c8b76ea80683a880479e3506980.jpg",
          "membershipType": 3,
          "lastSeen": "2021-05-01T00:00:00.000Z"
        }
      },
      "Activity": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "hash": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "completed": {
            "type": "boolean"
          },
          "flawless": {
            "type": "boolean",
            "nullable": true
          },
          "fresh": {
            "type": "boolean",
            "nullable": true
          },
          "playerCount": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "dateStarted": {
            "type": "string",
            "format": "date-time"
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "platformType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BungieMembershipType"
              },
              {
                "default": 0
              }
            ]
          },
          "score": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "instanceId",
          "hash",
          "completed",
          "flawless",
          "fresh",
          "playerCount",
          "dateStarted",
          "dateCompleted",
          "duration",
          "score"
        ],
        "additionalProperties": false
      },
      "ActivityExtended": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Activity"
          },
          {
            "type": "object",
            "properties": {
              "dayOne": {
                "type": "boolean"
              },
              "contest": {
                "type": "boolean"
              },
              "weekOne": {
                "type": "boolean"
              }
            },
            "required": ["dayOne", "contest", "weekOne"],
            "additionalProperties": false
          }
        ]
      },
      "ActivityPlayerData": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean"
          },
          "sherpas": {
            "type": "integer",
            "minimum": 0
          },
          "isFirstClear": {
            "type": "boolean"
          },
          "timePlayedSeconds": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "completed",
          "sherpas",
          "isFirstClear",
          "timePlayedSeconds"
        ],
        "additionalProperties": false
      },
      "ActivityCharacterWeapon": {
        "type": "object",
        "properties": {
          "weaponHash": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "kills": {
            "type": "integer",
            "minimum": 0
          },
          "precisionKills": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": ["weaponHash", "kills", "precisionKills"]
      },
      "ActivityCharacter": {
        "type": "object",
        "properties": {
          "characterId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "classHash": {
            "type": "string",
            "nullable": true,
            "pattern": "^\\d+n?$"
          },
          "emblemHash": {
            "type": "string",
            "nullable": true,
            "pattern": "^\\d+n?$"
          },
          "completed": {
            "type": "boolean"
          },
          "timePlayedSeconds": {
            "type": "integer",
            "minimum": 0
          },
          "startSeconds": {
            "type": "integer",
            "minimum": 0
          },
          "score": {
            "type": "integer",
            "minimum": 0
          },
          "kills": {
            "type": "integer",
            "minimum": 0
          },
          "deaths": {
            "type": "integer",
            "minimum": 0
          },
          "assists": {
            "type": "integer",
            "minimum": 0
          },
          "precisionKills": {
            "type": "integer",
            "minimum": 0
          },
          "superKills": {
            "type": "integer",
            "minimum": 0
          },
          "grenadeKills": {
            "type": "integer",
            "minimum": 0
          },
          "meleeKills": {
            "type": "integer",
            "minimum": 0
          },
          "weapons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityCharacterWeapon"
            }
          }
        },
        "required": [
          "characterId",
          "classHash",
          "emblemHash",
          "completed",
          "timePlayedSeconds",
          "startSeconds",
          "score",
          "kills",
          "deaths",
          "assists",
          "precisionKills",
          "superKills",
          "grenadeKills",
          "meleeKills",
          "weapons"
        ]
      },
      "PlayerWithExtendedActivityData": {
        "type": "object",
        "properties": {
          "player": {
            "$ref": "#/components/schemas/PlayerInfo"
          },
          "data": {
            "type": "object",
            "properties": {
              "completed": {
                "type": "boolean"
              },
              "sherpas": {
                "type": "integer",
                "minimum": 0
              },
              "isFirstClear": {
                "type": "boolean"
              },
              "timePlayedSeconds": {
                "type": "integer",
                "minimum": 0
              },
              "characters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityCharacter"
                }
              }
            },
            "required": [
              "completed",
              "sherpas",
              "isFirstClear",
              "timePlayedSeconds",
              "characters"
            ]
          }
        },
        "required": ["player", "data"]
      },
      "ActivityWithPlayerData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActivityExtended"
          },
          {
            "type": "object",
            "properties": {
              "player": {
                "$ref": "#/components/schemas/ActivityPlayerData"
              }
            },
            "required": ["player"],
            "additionalProperties": false
          }
        ]
      },
      "RaidHubErrorCode": {
        "type": "string",
        "enum": [
          "Unknown",
          "PlayerNotFoundError",
          "ActivityNotFoundError",
          "PGCRNotFoundError",
          "LeaderboardNotFoundError",
          "InvalidClientSecretError",
          "InsufficientPermissionsError",
          "PathValidationError",
          "QueryValidationError",
          "BodyValidationError",
          "InternalServerError",
          "ApiKeyError",
          "AdminQuerySyntaxError"
        ]
      },
      "RaidHubError": {
        "type": "object",
        "properties": {
          "minted": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean",
            "enum": [false]
          },
          "error": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Unknown",
                  "PlayerNotFoundError",
                  "ActivityNotFoundError",
                  "PGCRNotFoundError",
                  "LeaderboardNotFoundError",
                  "InvalidClientSecretError",
                  "InsufficientPermissionsError",
                  "PathValidationError",
                  "QueryValidationError",
                  "BodyValidationError",
                  "InternalServerError",
                  "ApiKeyError",
                  "AdminQuerySyntaxError"
                ]
              }
            },
            "required": ["type"],
            "additionalProperties": {
              "nullable": true
            }
          }
        },
        "required": ["minted", "message", "success", "error"]
      },
      "ZodIssue": {
        "type": "object",
        "properties": {
          "fatal": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "path": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "code": {
            "type": "string",
            "enum": [
              "invalid_type",
              "invalid_literal",
              "custom",
              "invalid_union",
              "invalid_union_discriminator",
              "invalid_enum_value",
              "unrecognized_keys",
              "invalid_arguments",
              "invalid_return_type",
              "invalid_date",
              "invalid_string",
              "too_small",
              "too_big",
              "invalid_intersection_types",
              "not_multiple_of",
              "not_finite"
            ]
          }
        },
        "required": ["message", "path", "code"]
      },
      "PathValidationError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RaidHubError"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "enum": ["Invalid path params"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["PathValidationError"]
                  },
                  "issues": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ZodIssue"
                    }
                  }
                },
                "required": ["type", "issues"]
              }
            }
          }
        ]
      },
      "QueryValidationError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RaidHubError"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "enum": ["Invalid query params"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["QueryValidationError"]
                  },
                  "issues": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ZodIssue"
                    }
                  }
                },
                "required": ["type", "issues"]
              }
            }
          }
        ]
      },
      "BodyValidationError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RaidHubError"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "enum": ["Invalid JSON body"]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["BodyValidationError"]
                  },
                  "issues": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ZodIssue"
                    }
                  }
                },
                "required": ["type", "issues"]
              }
            }
          }
        ]
      },
      "InternalServerError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RaidHubError"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "enum": ["Something went wrong."]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["InternalServerError"]
                  },
                  "at": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": ["type", "at"]
              }
            }
          }
        ]
      },
      "InsufficientPermissionsError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RaidHubError"
          },
          {
            "type": "object",
            "properties": {
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["InsufficientPermissionsError"]
                  },
                  "message": {
                    "type": "string",
                    "enum": ["Forbidden"]
                  }
                },
                "required": ["type", "message"]
              }
            }
          }
        ]
      },
      "ApiKeyError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RaidHubError"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "anyOf": [
                  {
                    "type": "string",
                    "enum": ["Invalid API Key"]
                  },
                  {
                    "type": "string",
                    "enum": ["Missing API Key"]
                  }
                ]
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["ApiKeyError"]
                  },
                  "apiKey": {
                    "type": "string",
                    "nullable": true
                  },
                  "origin": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": ["type", "apiKey", "origin"]
              }
            }
          }
        ]
      },
      "ActivitySearchBody": {
        "type": "object",
        "properties": {
          "membershipId": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d+n?$"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^\\d+n?$"
                }
              }
            ]
          },
          "minPlayers": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "maxPlayers": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "minDate": {
            "type": "string",
            "nullable": true
          },
          "maxDate": {
            "type": "string",
            "nullable": true
          },
          "minSeason": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "maxSeason": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "fresh": {
            "type": "boolean"
          },
          "completed": {
            "type": "boolean"
          },
          "flawless": {
            "type": "boolean"
          },
          "raid": {
            "$ref": "#/components/schemas/RaidEnum"
          },
          "platformType": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "reversed": {
            "type": "boolean",
            "nullable": true,
            "default": false
          },
          "count": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true,
            "default": 25
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true,
            "default": 1
          }
        },
        "required": ["membershipId"]
      },
      "AdminQuerySyntaxError": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["name", "code", "message"]
      },
      "RaidPath": {
        "type": "string",
        "enum": [
          "leviathan",
          "eaterofworlds",
          "spireofstars",
          "lastwish",
          "scourgeofthepast",
          "crownofsorrow",
          "gardenofsalvation",
          "deepstonecrypt",
          "vaultofglass",
          "vowofthedisciple",
          "kingsfall",
          "rootofnightmares",
          "crotasend"
        ]
      },
      "IndividualLeaderboardEntry": {
        "type": "object",
        "properties": {
          "position": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "rank": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "value": {
            "type": "number"
          },
          "player": {
            "$ref": "#/components/schemas/PlayerInfo"
          }
        },
        "required": ["position", "rank", "value", "player"],
        "additionalProperties": false
      },
      "WorldFirstLeaderboardEntry": {
        "type": "object",
        "properties": {
          "position": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "rank": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "value": {
            "type": "number"
          },
          "activity": {
            "$ref": "#/components/schemas/Activity"
          },
          "players": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "player": {
                  "$ref": "#/components/schemas/PlayerInfo"
                },
                "data": {
                  "$ref": "#/components/schemas/ActivityPlayerData"
                }
              },
              "required": ["player", "data"]
            }
          }
        },
        "required": ["position", "rank", "value", "activity", "players"],
        "additionalProperties": false
      },
      "PantheonPath": {
        "type": "string",
        "enum": ["atraks", "oryx", "rhulk", "nezarec"]
      },
      "LeaderboardSearchQuery": {
        "type": "object",
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["worldfirst"]
              },
              {
                "type": "string",
                "enum": ["individual"]
              },
              {
                "type": "string",
                "enum": ["global"]
              }
            ]
          },
          "membershipId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "count": {
            "type": "integer",
            "minimum": 5,
            "exclusiveMinimum": true,
            "maximum": 100,
            "default": 25
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["normal", "prestige", "challenge", "master"]
              },
              {
                "type": "string",
                "enum": ["fresh", "total", "sherpas", "trios", "duos", "solos"]
              },
              {
                "type": "string",
                "enum": [
                  "total-clears",
                  "sherpas",
                  "full-clears",
                  "cumulative-speedrun"
                ]
              }
            ]
          },
          "raid": {
            "type": "number"
          }
        },
        "required": ["type", "membershipId", "category"]
      },
      "PantheonEnum": {
        "type": "integer",
        "enum": [128, 129, 130, 131]
      },
      "SunsetRaidEnum": {
        "type": "integer",
        "enum": [1, 2, 3, 5, 6]
      },
      "MasterRaidEnum": {
        "type": "integer",
        "enum": [9, 10, 11, 12, 13]
      },
      "PrestigeRaidEnum": {
        "type": "integer",
        "enum": [1, 2, 3]
      },
      "ContestRaidEnum": {
        "type": "integer",
        "enum": [6, 7, 8, 9, 10, 11, 12, 13]
      },
      "DestinyPostGameCarnageReport": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string"
          },
          "startingPhaseIndex": {
            "type": "number"
          },
          "activityWasStartedFromBeginning": {
            "type": "boolean"
          },
          "activityDetails": {
            "type": "object",
            "properties": {
              "directorActivityHash": {
                "type": "string",
                "pattern": "^\\d+n?$"
              },
              "instanceId": {
                "type": "string",
                "pattern": "^\\d+n?$"
              },
              "mode": {
                "type": "integer",
                "enum": [
                  0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19,
                  20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39,
                  40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                  55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                  70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
                  85, 86, 87, 88, 89, 90, 91
                ]
              },
              "modes": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "enum": [
                    0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19,
                    20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39,
                    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                    70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
                    85, 86, 87, 88, 89, 90, 91
                  ]
                }
              },
              "membershipType": {
                "$ref": "#/components/schemas/BungieMembershipType"
              }
            },
            "required": [
              "directorActivityHash",
              "instanceId",
              "mode",
              "modes",
              "membershipType"
            ]
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "player": {
                  "type": "object",
                  "properties": {
                    "destinyUserInfo": {
                      "type": "object",
                      "properties": {
                        "iconPath": {
                          "type": "string",
                          "nullable": true
                        },
                        "crossSaveOverride": {
                          "$ref": "#/components/schemas/BungieMembershipType"
                        },
                        "applicableMembershipTypes": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                          }
                        },
                        "membershipType": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/BungieMembershipType"
                            },
                            {
                              "nullable": true
                            }
                          ]
                        },
                        "membershipId": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string",
                          "nullable": true
                        },
                        "bungieGlobalDisplayName": {
                          "type": "string",
                          "nullable": true
                        },
                        "bungieGlobalDisplayNameCode": {
                          "type": "number",
                          "nullable": true
                        }
                      },
                      "required": ["crossSaveOverride", "membershipId"]
                    },
                    "characterClass": {
                      "type": "string",
                      "nullable": true
                    },
                    "classHash": {
                      "type": "number"
                    },
                    "raceHash": {
                      "type": "number"
                    },
                    "genderHash": {
                      "type": "number"
                    },
                    "characterLevel": {
                      "type": "number"
                    },
                    "lightLevel": {
                      "type": "number"
                    },
                    "emblemHash": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "destinyUserInfo",
                    "classHash",
                    "raceHash",
                    "genderHash",
                    "characterLevel",
                    "lightLevel",
                    "emblemHash"
                  ]
                },
                "characterId": {
                  "type": "string"
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "basic": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "displayValue": {
                            "type": "string"
                          }
                        },
                        "required": ["value", "displayValue"]
                      }
                    },
                    "required": ["basic"]
                  }
                },
                "extended": {
                  "type": "object",
                  "properties": {
                    "weapons": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "referenceId": {
                            "type": "number"
                          },
                          "values": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "basic": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "displayValue": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["value", "displayValue"]
                                }
                              },
                              "required": ["basic"]
                            }
                          }
                        },
                        "required": ["referenceId", "values"]
                      }
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "basic": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "displayValue": {
                                "type": "string"
                              }
                            },
                            "required": ["value", "displayValue"]
                          }
                        },
                        "required": ["basic"]
                      }
                    }
                  },
                  "required": ["values"]
                }
              },
              "required": ["player", "characterId", "values"]
            }
          }
        },
        "required": ["period", "activityDetails", "entries"],
        "description": "A raw PGCR with a few redundant fields removed",
        "externalDocs": {
          "description": "Bungie.net API documentation",
          "url": "https://bungie-net.github.io/multi/schema_Destiny-HistoricalStats-DestinyPostGameCarnageReportData.html#schema_Destiny-HistoricalStats-DestinyPostGameCarnageReportData"
        }
      },
      "PlayerStatRanking": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "nullable": true
          },
          "rank": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": ["value", "rank"]
      },
      "PlayerProfileLeaderboardEntry": {
        "type": "object",
        "properties": {
          "rank": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "instanceId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "boardId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["Normal", "Challenge", "Prestige", "Master"]
          },
          "activityHash": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time"
          },
          "dayOne": {
            "type": "boolean"
          },
          "contest": {
            "type": "boolean"
          },
          "weekOne": {
            "type": "boolean"
          }
        },
        "required": [
          "rank",
          "instanceId",
          "boardId",
          "type",
          "activityHash",
          "dateCompleted",
          "dayOne",
          "contest",
          "weekOne"
        ]
      },
      "ManifestResponse": {
        "type": "object",
        "properties": {
          "hashes": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "activityId": {
                  "$ref": "#/components/schemas/ActivityEnum"
                },
                "versionId": {
                  "$ref": "#/components/schemas/ActivityVersionEnum"
                }
              },
              "required": ["activityId", "versionId"]
            }
          },
          "listed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RaidEnum"
            }
          },
          "pantheonId": {
            "$ref": "#/components/schemas/ActivityEnum"
          },
          "pantheonModes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PantheonEnum"
            }
          },
          "sunset": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SunsetRaidEnum"
            }
          },
          "contest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContestRaidEnum"
            }
          },
          "master": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MasterRaidEnum"
            }
          },
          "prestige": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrestigeRaidEnum"
            }
          },
          "reprisedChallengePairings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "raid": {
                  "$ref": "#/components/schemas/RaidEnum"
                },
                "version": {
                  "$ref": "#/components/schemas/ActivityVersionEnum"
                },
                "triumphName": {
                  "type": "string"
                }
              },
              "required": ["raid", "version", "triumphName"]
            }
          },
          "leaderboards": {
            "type": "object",
            "properties": {
              "global": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "enum": [
                        "total-clears",
                        "sherpas",
                        "full-clears",
                        "cumulative-speedrun"
                      ]
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "format": {
                      "type": "string",
                      "enum": ["number", "time"]
                    }
                  },
                  "required": ["category", "displayName", "format"]
                }
              },
              "worldFirst": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string"
                      },
                      "category": {
                        "type": "string",
                        "enum": ["normal", "prestige", "challenge", "master"]
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": ["id", "displayName", "category", "date"]
                  }
                }
              },
              "individual": {
                "type": "object",
                "properties": {
                  "clears": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "type": "string"
                          },
                          "category": {
                            "type": "string",
                            "enum": ["fresh", "total", "trios", "duos", "solos"]
                          }
                        },
                        "required": ["displayName", "category"]
                      }
                    }
                  }
                },
                "required": ["clears"]
              },
              "pantheon": {
                "type": "object",
                "properties": {
                  "individual": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "displayName": {
                          "type": "string"
                        },
                        "category": {
                          "type": "string",
                          "enum": ["fresh", "total", "sherpas", "trios", "duos"]
                        }
                      },
                      "required": ["displayName", "category"]
                    }
                  },
                  "first": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "versionId": {
                          "$ref": "#/components/schemas/PantheonEnum"
                        },
                        "path": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      },
                      "required": ["versionId", "path", "displayName"]
                    }
                  },
                  "speedrun": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "versionId": {
                          "$ref": "#/components/schemas/PantheonEnum"
                        },
                        "path": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      },
                      "required": ["versionId", "path", "displayName"]
                    }
                  }
                },
                "required": ["individual", "first", "speedrun"]
              }
            },
            "required": ["global", "worldFirst", "individual", "pantheon"]
          },
          "raidUrlPaths": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RaidPath"
            }
          },
          "pantheonUrlPaths": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PantheonPath"
            }
          },
          "activityStrings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "versionStrings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "checkpointNames": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "hashes",
          "listed",
          "pantheonId",
          "pantheonModes",
          "sunset",
          "contest",
          "master",
          "prestige",
          "reprisedChallengePairings",
          "leaderboards",
          "raidUrlPaths",
          "pantheonUrlPaths",
          "activityStrings",
          "versionStrings",
          "checkpointNames"
        ],
        "additionalProperties": false
      },
      "PlayerSearchResponse": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "query": {
                "type": "string"
              }
            },
            "required": ["count", "query"]
          },
          "results": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PlayerInfo"
                },
                {
                  "type": "object",
                  "properties": {
                    "clears": {
                      "type": "integer",
                      "minimum": 0
                    }
                  },
                  "required": ["clears"],
                  "additionalProperties": false
                }
              ],
              "example": {
                "bungieGlobalDisplayName": "Newo",
                "bungieGlobalDisplayNameCode": "9010",
                "membershipId": "4611686018488107374",
                "displayName": "xx_newo_xx",
                "iconPath": "/common/destiny2_content/icons/93844c8b76ea80683a880479e3506980.jpg",
                "membershipType": 3,
                "lastSeen": "2021-05-01T00:00:00.000Z"
              }
            }
          }
        },
        "required": ["params", "results"],
        "additionalProperties": false
      },
      "PlayerActivitiesResponse": {
        "type": "object",
        "properties": {
          "membershipId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "activities": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ActivityWithPlayerData"
                },
                {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "properties": {
                        "activityId": {
                          "$ref": "#/components/schemas/RaidEnum"
                        },
                        "versionId": {
                          "$ref": "#/components/schemas/ActivityVersionEnum"
                        }
                      },
                      "required": ["activityId", "versionId"]
                    }
                  },
                  "required": ["meta"],
                  "additionalProperties": false
                }
              ]
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true,
            "pattern": "^\\d+n?$"
          }
        },
        "required": ["membershipId", "activities", "nextCursor"],
        "additionalProperties": false
      },
      "PlayerBasicResponse": {
        "type": "object",
        "properties": {
          "membershipId": {
            "type": "string",
            "pattern": "^\\d+n?$"
          },
          "membershipType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BungieMembershipType"
              },
              {
                "nullable": true,
                "description": "The platform on which the player created their account."
              }
            ]
          },
          "iconPath": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true,
            "description": "The platform-specific display name of the player. No longer shown in-game."
          },
          "bungieGlobalDisplayName": {
            "type": "string",
            "nullable": true
          },
          "bungieGlobalDisplayNameCode": {
            "type": "string",
            "nullable": true
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "membershipId",
          "membershipType",
          "iconPath",
          "displayName",
          "bungieGlobalDisplayName",
          "bungieGlobalDisplayNameCode",
          "lastSeen"
        ],
        "additionalProperties": false,
        "example": {
          "bungieGlobalDisplayName": "Newo",
          "bungieGlobalDisplayNameCode": "9010",
          "membershipId": "4611686018488107374",
          "displayName": "xx_newo_xx",
          "iconPath": "/common/destiny2_content/icons/93844c8b76ea80683a880479e3506980.jpg",
          "membershipType": 3,
          "lastSeen": "2021-05-01T00:00:00.000Z"
        }
      },
      "PlayerProfileResponse": {
        "type": "object",
        "properties": {
          "player": {
            "$ref": "#/components/schemas/PlayerInfo"
          },
          "stats": {
            "type": "object",
            "properties": {
              "global": {
                "type": "object",
                "nullable": true,
                "properties": {
                  "clears": {
                    "$ref": "#/components/schemas/PlayerStatRanking"
                  },
                  "fullClears": {
                    "$ref": "#/components/schemas/PlayerStatRanking"
                  },
                  "sherpas": {
                    "$ref": "#/components/schemas/PlayerStatRanking"
                  },
                  "speed": {
                    "$ref": "#/components/schemas/PlayerStatRanking"
                  }
                },
                "required": ["clears", "fullClears", "sherpas", "speed"]
              },
              "byRaid": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "fastestClear": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "instanceId": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "duration": {
                          "type": "integer"
                        }
                      },
                      "required": ["instanceId", "duration"]
                    },
                    "clears": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "fullClears": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "sherpas": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "trios": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "duos": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "solos": {
                      "type": "integer",
                      "minimum": 0
                    }
                  },
                  "required": [
                    "fastestClear",
                    "clears",
                    "fullClears",
                    "sherpas",
                    "trios",
                    "duos",
                    "solos"
                  ]
                }
              }
            },
            "required": ["global", "byRaid"]
          },
          "worldFirstEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerProfileLeaderboardEntry"
            }
          }
        },
        "required": ["player", "stats", "worldFirstEntries"],
        "additionalProperties": false
      },
      "ActivitySearchResponse": {
        "type": "object",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/ActivitySearchBody"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityExtended"
            }
          }
        },
        "required": ["query", "results"],
        "additionalProperties": false
      },
      "ActivityResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActivityExtended"
          },
          {
            "type": "object",
            "properties": {
              "meta": {
                "type": "object",
                "properties": {
                  "activityId": {
                    "$ref": "#/components/schemas/ActivityEnum"
                  },
                  "activityName": {
                    "type": "string"
                  },
                  "versionId": {
                    "$ref": "#/components/schemas/ActivityVersionEnum"
                  },
                  "versionName": {
                    "type": "string"
                  }
                },
                "required": [
                  "activityId",
                  "activityName",
                  "versionId",
                  "versionName"
                ]
              },
              "leaderboardEntries": {
                "type": "object",
                "additionalProperties": {
                  "type": "number"
                }
              },
              "players": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlayerWithExtendedActivityData"
                }
              }
            },
            "required": ["meta", "leaderboardEntries", "players"],
            "additionalProperties": false
          }
        ]
      },
      "LeaderboardSearchResponse": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "type": {
                "anyOf": [
                  {
                    "type": "string",
                    "enum": ["individual"]
                  },
                  {
                    "type": "string",
                    "enum": ["worldfirst"]
                  },
                  {
                    "type": "string",
                    "enum": ["global"]
                  }
                ]
              },
              "category": {
                "type": "string"
              },
              "raid": {
                "$ref": "#/components/schemas/RaidEnum"
              },
              "membershipId": {
                "type": "string",
                "pattern": "^\\d+n?$"
              },
              "count": {
                "type": "integer",
                "minimum": 5,
                "exclusiveMinimum": true,
                "maximum": 100,
                "default": 25
              }
            },
            "required": ["type", "category", "membershipId"],
            "additionalProperties": false
          },
          "page": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "rank": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "position": {
            "type": "integer",
            "minimum": 0,
            "exclusiveMinimum": true
          },
          "entries": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IndividualLeaderboardEntry"
                },
                {
                  "$ref": "#/components/schemas/WorldFirstLeaderboardEntry"
                }
              ]
            }
          }
        },
        "required": ["params", "page", "rank", "position", "entries"],
        "additionalProperties": false
      },
      "LeaderboardGlobalResponse": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "enum": [
                  "total-clears",
                  "sherpas",
                  "full-clears",
                  "cumulative-speedrun"
                ]
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true,
                "default": 1
              }
            },
            "required": ["category", "count"]
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndividualLeaderboardEntry"
            }
          }
        },
        "required": ["params", "entries"],
        "additionalProperties": false
      },
      "LeaderboardWorldfirstResponse": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "raid": {
                "$ref": "#/components/schemas/RaidPath"
              },
              "category": {
                "type": "string",
                "enum": ["normal", "prestige", "challenge", "master"]
              },
              "count": {
                "type": "integer",
                "minimum": 25,
                "exclusiveMinimum": true,
                "maximum": 100,
                "default": 50
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true,
                "default": 1
              }
            },
            "required": ["raid", "category"],
            "additionalProperties": false
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorldFirstLeaderboardEntry"
            }
          }
        },
        "required": ["params", "date", "entries"],
        "additionalProperties": false
      },
      "LeaderboardIndividualResponse": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "raid": {
                "$ref": "#/components/schemas/RaidPath"
              },
              "category": {
                "type": "string",
                "enum": ["fresh", "total", "sherpas", "trios", "duos", "solos"]
              },
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true,
                "default": 1
              }
            },
            "required": ["raid", "category", "count"]
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndividualLeaderboardEntry"
            }
          }
        },
        "required": ["params", "entries"],
        "additionalProperties": false
      },
      "LeaderboardSpeedrunResponse": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true,
                "default": 1
              },
              "raid": {
                "$ref": "#/components/schemas/RaidPath"
              }
            },
            "required": ["count", "raid"]
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rank": {
                  "type": "number"
                },
                "instanceId": {
                  "type": "string",
                  "pattern": "^\\d+n?$"
                },
                "dateStarted": {
                  "type": "string",
                  "format": "date-time"
                },
                "dateCompleted": {
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "type": "integer",
                  "minimum": 0,
                  "exclusiveMinimum": true
                },
                "players": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "player": {
                        "$ref": "#/components/schemas/PlayerInfo"
                      },
                      "data": {
                        "$ref": "#/components/schemas/ActivityPlayerData"
                      }
                    },
                    "required": ["player", "data"]
                  }
                }
              },
              "required": [
                "rank",
                "instanceId",
                "dateStarted",
                "dateCompleted",
                "duration",
                "players"
              ]
            }
          }
        },
        "required": ["params", "entries"],
        "additionalProperties": false
      },
      "LeaderboardPantheonFirstResponse": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "version": {
                "$ref": "#/components/schemas/PantheonPath"
              },
              "count": {
                "type": "integer",
                "minimum": 25,
                "exclusiveMinimum": true,
                "maximum": 100,
                "default": 50
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true,
                "default": 1
              }
            },
            "required": ["version"],
            "additionalProperties": false
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorldFirstLeaderboardEntry"
            }
          }
        },
        "required": ["params", "entries"],
        "additionalProperties": false
      },
      "LeaderboardPantheonSpeedrunResponse": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "version": {
                "$ref": "#/components/schemas/PantheonPath"
              },
              "count": {
                "type": "integer",
                "minimum": 25,
                "exclusiveMinimum": true,
                "maximum": 100,
                "default": 50
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true,
                "default": 1
              }
            },
            "required": ["version"],
            "additionalProperties": false
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorldFirstLeaderboardEntry"
            }
          }
        },
        "required": ["params", "entries"],
        "additionalProperties": false
      },
      "LeaderboardPantheonAllResponse": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "minimum": 25,
                "exclusiveMinimum": true,
                "maximum": 100,
                "default": 50
              },
              "page": {
                "type": "integer",
                "minimum": 0,
                "exclusiveMinimum": true,
                "default": 1
              },
              "category": {
                "type": "string",
                "enum": ["fresh", "total", "sherpas", "trios", "duos"]
              }
            },
            "required": ["category"],
            "additionalProperties": false
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndividualLeaderboardEntry"
            }
          }
        },
        "required": ["params", "entries"],
        "additionalProperties": false
      },
      "PgcrResponse": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string"
          },
          "startingPhaseIndex": {
            "type": "number"
          },
          "activityWasStartedFromBeginning": {
            "type": "boolean"
          },
          "activityDetails": {
            "type": "object",
            "properties": {
              "directorActivityHash": {
                "type": "string",
                "pattern": "^\\d+n?$"
              },
              "instanceId": {
                "type": "string",
                "pattern": "^\\d+n?$"
              },
              "mode": {
                "type": "integer",
                "enum": [
                  0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19,
                  20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39,
                  40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                  55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                  70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
                  85, 86, 87, 88, 89, 90, 91
                ]
              },
              "modes": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "enum": [
                    0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19,
                    20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 38, 39,
                    40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                    70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
                    85, 86, 87, 88, 89, 90, 91
                  ]
                }
              },
              "membershipType": {
                "$ref": "#/components/schemas/BungieMembershipType"
              }
            },
            "required": [
              "directorActivityHash",
              "instanceId",
              "mode",
              "modes",
              "membershipType"
            ]
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "player": {
                  "type": "object",
                  "properties": {
                    "destinyUserInfo": {
                      "type": "object",
                      "properties": {
                        "iconPath": {
                          "type": "string",
                          "nullable": true
                        },
                        "crossSaveOverride": {
                          "$ref": "#/components/schemas/BungieMembershipType"
                        },
                        "applicableMembershipTypes": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                          }
                        },
                        "membershipType": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/BungieMembershipType"
                            },
                            {
                              "nullable": true
                            }
                          ]
                        },
                        "membershipId": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string",
                          "nullable": true
                        },
                        "bungieGlobalDisplayName": {
                          "type": "string",
                          "nullable": true
                        },
                        "bungieGlobalDisplayNameCode": {
                          "type": "number",
                          "nullable": true
                        }
                      },
                      "required": ["crossSaveOverride", "membershipId"]
                    },
                    "characterClass": {
                      "type": "string",
                      "nullable": true
                    },
                    "classHash": {
                      "type": "number"
                    },
                    "raceHash": {
                      "type": "number"
                    },
                    "genderHash": {
                      "type": "number"
                    },
                    "characterLevel": {
                      "type": "number"
                    },
                    "lightLevel": {
                      "type": "number"
                    },
                    "emblemHash": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "destinyUserInfo",
                    "classHash",
                    "raceHash",
                    "genderHash",
                    "characterLevel",
                    "lightLevel",
                    "emblemHash"
                  ]
                },
                "characterId": {
                  "type": "string"
                },
                "values": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "basic": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "displayValue": {
                            "type": "string"
                          }
                        },
                        "required": ["value", "displayValue"]
                      }
                    },
                    "required": ["basic"]
                  }
                },
                "extended": {
                  "type": "object",
                  "properties": {
                    "weapons": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "referenceId": {
                            "type": "number"
                          },
                          "values": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "basic": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "displayValue": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["value", "displayValue"]
                                }
                              },
                              "required": ["basic"]
                            }
                          }
                        },
                        "required": ["referenceId", "values"]
                      }
                    },
                    "values": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "basic": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "displayValue": {
                                "type": "string"
                              }
                            },
                            "required": ["value", "displayValue"]
                          }
                        },
                        "required": ["basic"]
                      }
                    }
                  },
                  "required": ["values"]
                }
              },
              "required": ["player", "characterId", "values"]
            }
          }
        },
        "required": ["period", "activityDetails", "entries"],
        "additionalProperties": false,
        "description": "A raw PGCR with a few redundant fields removed",
        "externalDocs": {
          "description": "Bungie.net API documentation",
          "url": "https://bungie-net.github.io/multi/schema_Destiny-HistoricalStats-DestinyPostGameCarnageReportData.html#schema_Destiny-HistoricalStats-DestinyPostGameCarnageReportData"
        }
      },
      "AdminQueryResponse": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["SELECT"]
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "nullable": true
                  }
                }
              }
            },
            "required": ["type", "data"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["HIGH COST"]
              },
              "data": {
                "nullable": true
              },
              "cost": {
                "type": "number"
              },
              "estimatedDuration": {
                "type": "number"
              }
            },
            "required": ["type", "data", "cost", "estimatedDuration"]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["EXPLAIN"]
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": ["type", "data"]
          }
        ]
      },
      "AuthorizeResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["value", "expires"]
      }
    },
    "parameters": {},
    "securitySchemes": {
      "API Key": {
        "type": "apiKey",
        "name": "X-API-KEY",
        "in": "header"
      },
      "Administrator Token": {
        "type": "http",
        "name": "Authorization",
        "scheme": "bearer",
        "in": "header"
      }
    }
  },
  "paths": {
    "/manifest": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManifestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          }
        }
      }
    },
    "/player/search": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "maximum": 50,
              "default": 20
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "required": true,
            "name": "query",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          }
        }
      }
    },
    "/player/{membershipId}/activities": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "membershipId",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 50,
              "exclusiveMinimum": true,
              "maximum": 5000,
              "default": 2000
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": false,
            "name": "cursor",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerActivitiesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "notFound": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "membershipId": {
                          "type": "string",
                          "pattern": "^\\d+n?$"
                        }
                      },
                      "required": ["notFound", "membershipId"]
                    },
                    {
                      "$ref": "#/components/schemas/PathValidationError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/player/{membershipId}/basic": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "membershipId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerBasicResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "notFound": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "membershipId": {
                          "type": "string",
                          "pattern": "^\\d+n?$"
                        }
                      },
                      "required": ["notFound", "membershipId"]
                    },
                    {
                      "$ref": "#/components/schemas/PathValidationError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/player/{membershipId}/profile": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "membershipId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "notFound": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "membershipId": {
                          "type": "string",
                          "pattern": "^\\d+n?$"
                        }
                      },
                      "required": ["notFound", "membershipId"]
                    },
                    {
                      "$ref": "#/components/schemas/PathValidationError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/activity/search": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitySearchBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitySearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BodyValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          }
        }
      }
    },
    "/activity/{instanceId}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "instanceId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "notFound": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "instanceId": {
                          "type": "string",
                          "pattern": "^\\d+n?$"
                        }
                      },
                      "required": ["notFound", "instanceId"]
                    },
                    {
                      "$ref": "#/components/schemas/PathValidationError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/search": {
      "get": {
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": ["worldfirst"]
                },
                {
                  "type": "string",
                  "enum": ["individual"]
                },
                {
                  "type": "string",
                  "enum": ["global"]
                }
              ]
            },
            "required": true,
            "name": "type",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "membershipId",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 5,
              "exclusiveMinimum": true,
              "maximum": 100,
              "default": 25
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": ["normal", "prestige", "challenge", "master"]
                },
                {
                  "type": "string",
                  "enum": [
                    "fresh",
                    "total",
                    "sherpas",
                    "trios",
                    "duos",
                    "solos"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "total-clears",
                    "sherpas",
                    "full-clears",
                    "cumulative-speedrun"
                  ]
                }
              ]
            },
            "required": true,
            "name": "category",
            "in": "query"
          },
          {
            "schema": {
              "type": "number"
            },
            "required": false,
            "name": "raid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "LeaderboardNotFoundError",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "notFound": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "params": {
                          "type": "object",
                          "properties": {
                            "membershipId": {
                              "type": "string",
                              "pattern": "^\\d+n?$"
                            },
                            "count": {
                              "type": "integer",
                              "minimum": 5,
                              "exclusiveMinimum": true,
                              "maximum": 100,
                              "default": 25
                            },
                            "type": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": ["individual"]
                                },
                                {
                                  "type": "string",
                                  "enum": ["worldfirst"]
                                },
                                {
                                  "type": "string",
                                  "enum": ["global"]
                                }
                              ]
                            },
                            "category": {
                              "type": "string"
                            },
                            "raid": {
                              "$ref": "#/components/schemas/RaidEnum"
                            }
                          },
                          "required": ["membershipId", "type", "category"],
                          "additionalProperties": false
                        }
                      },
                      "required": ["notFound", "params"],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "notFound": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "params": {
                          "type": "object",
                          "properties": {
                            "membershipId": {
                              "type": "string",
                              "pattern": "^\\d+n?$"
                            },
                            "count": {
                              "type": "integer",
                              "minimum": 5,
                              "exclusiveMinimum": true,
                              "maximum": 100,
                              "default": 25
                            },
                            "type": {
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": ["individual"]
                                },
                                {
                                  "type": "string",
                                  "enum": ["worldfirst"]
                                },
                                {
                                  "type": "string",
                                  "enum": ["global"]
                                }
                              ]
                            },
                            "category": {
                              "type": "string"
                            },
                            "raid": {
                              "$ref": "#/components/schemas/RaidEnum"
                            }
                          },
                          "required": ["membershipId", "type", "category"],
                          "additionalProperties": false
                        }
                      },
                      "required": ["notFound", "params"],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/global/{category}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "total-clears",
                "sherpas",
                "full-clears",
                "cumulative-speedrun"
              ]
            },
            "required": true,
            "name": "category",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 25,
              "exclusiveMinimum": true,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardGlobalResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PathValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/{raid}/worldfirst/{category}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/RaidPath"
            },
            "required": true,
            "name": "raid",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["normal", "prestige", "challenge", "master"]
            },
            "required": true,
            "name": "category",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 25,
              "exclusiveMinimum": true,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardWorldfirstResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "notFound": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "params": {
                          "type": "object",
                          "properties": {
                            "raid": {
                              "$ref": "#/components/schemas/RaidPath"
                            },
                            "category": {
                              "type": "string",
                              "enum": [
                                "normal",
                                "prestige",
                                "challenge",
                                "master"
                              ]
                            },
                            "count": {
                              "type": "integer",
                              "minimum": 25,
                              "exclusiveMinimum": true,
                              "maximum": 100,
                              "default": 50
                            },
                            "page": {
                              "type": "integer",
                              "minimum": 0,
                              "exclusiveMinimum": true,
                              "default": 1
                            }
                          },
                          "required": ["raid", "category"],
                          "additionalProperties": false
                        }
                      },
                      "required": ["notFound", "params"],
                      "additionalProperties": false
                    },
                    {
                      "$ref": "#/components/schemas/PathValidationError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/{raid}/individual/{category}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/RaidPath"
            },
            "required": true,
            "name": "raid",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["fresh", "total", "sherpas", "trios", "duos", "solos"]
            },
            "required": true,
            "name": "category",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 25,
              "exclusiveMinimum": true,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardIndividualResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "unavailable": {
                          "type": "boolean",
                          "enum": [true]
                        }
                      },
                      "required": ["unavailable"]
                    },
                    {
                      "$ref": "#/components/schemas/PathValidationError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/{raid}/speedrun": {
      "get": {
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/RaidPath"
            },
            "required": true,
            "name": "raid",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 25,
              "exclusiveMinimum": true,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardSpeedrunResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PathValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/pantheon/{version}/first": {
      "get": {
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/PantheonPath"
            },
            "required": true,
            "name": "version",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 25,
              "exclusiveMinimum": true,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardPantheonFirstResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PathValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/pantheon/{version}/speedrun": {
      "get": {
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/PantheonPath"
            },
            "required": true,
            "name": "version",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 25,
              "exclusiveMinimum": true,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardPantheonSpeedrunResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PathValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/pantheon/all/{category}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": ["fresh", "total", "sherpas", "trios", "duos"]
            },
            "required": true,
            "name": "category",
            "in": "path"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 25,
              "exclusiveMinimum": true,
              "maximum": 100,
              "default": 50
            },
            "required": false,
            "name": "count",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "default": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardPantheonAllResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PathValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/pgcr/{instanceId}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string",
              "pattern": "^\\d+n?$"
            },
            "required": true,
            "name": "instanceId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PgcrResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "notFound": {
                          "type": "boolean",
                          "enum": [true]
                        },
                        "instanceId": {
                          "type": "string",
                          "pattern": "^\\d+n?$"
                        }
                      },
                      "required": ["notFound", "instanceId"]
                    },
                    {
                      "$ref": "#/components/schemas/PathValidationError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/admin/query": {
      "post": {
        "security": [
          {
            "Administrator Token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["SELECT", "EXPLAIN"]
                  },
                  "ignoreCost": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": ["query", "type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BodyValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsufficientPermissionsError"
                }
              }
            }
          },
          "501": {
            "description": "AdminQuerySyntaxError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminQuerySyntaxError"
                }
              }
            }
          }
        }
      }
    },
    "/authorize": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientSecret": {
                    "type": "string"
                  }
                },
                "required": ["clientSecret"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BodyValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyError"
                }
              }
            }
          },
          "403": {
            "description": "InvalidClientSecretError",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unauthorized": {
                      "type": "boolean",
                      "enum": [true]
                    }
                  },
                  "required": ["unauthorized"]
                }
              }
            }
          }
        }
      }
    }
  }
}
