generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Activity {
  instanceId               BigInt                     @id @unique @map("instance_id")
  raidHash                 BigInt                     @map("raid_hash")
  flawless                 Boolean?
  completed                Boolean
  fresh                    Boolean?
  playerCount              Int                        @map("player_count")
  dateStarted              DateTime                   @map("date_started")
  dateCompleted            DateTime                   @map("date_completed")
  platformType             Int                        @map("platform_type")
  activityLeaderboardEntry ActivityLeaderboardEntry[]
  playerActivity           PlayerActivity[]           @relation("player_activities")

  @@index([raidHash, dateCompleted(Sort: Asc)], map: "idx_raidhash_date_completed")
  @@index([dateCompleted(sort: Desc)], map: "date_index")
  @@map("activity")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model Player {
  membershipId                BigInt           @id @map("membership_id")
  membershipType              Int?             @map("membership_type")
  iconPath                    String?          @map("icon_path")
  displayName                 String?          @map("display_name")
  bungieGlobalDisplayName     String?          @map("bungie_global_display_name")
  bungieGlobalDisplayNameCode String?          @map("bungie_global_display_name_code")
  lastSeen                    DateTime         @map("last_seen")
  clears                      Int              @default(0) @map("clears")
  playerActivities            PlayerActivity[] @relation("player_activities")

  @@index([clears], map: "clears_idx")
  @@index([displayName(ops: raw("gin_trgm_ops")), bungieGlobalDisplayName(ops: raw("gin_trgm_ops"))], map: "trgm_idx_both_display_names", type: Gin)
  @@index([bungieGlobalDisplayName(ops: raw("gin_trgm_ops"))], map: "trgm_idx_bungie_global_display_name", type: Gin)
  @@index([bungieGlobalDisplayName(ops: raw("gin_trgm_ops")), bungieGlobalDisplayNameCode(ops: raw("gin_trgm_ops"))], map: "trgm_idx_bungie_global_name_and_code", type: Gin)
  @@index([displayName(ops: raw("gin_trgm_ops"))], map: "trgm_idx_display_name", type: Gin)
  @@map("player")
}

model PlayerActivity {
  instanceId        BigInt   @map("instance_id")
  membershipId      BigInt   @map("membership_id")
  finishedRaid      Boolean  @map("finished_raid")
  kills             Int      @default(0)
  assists           Int      @default(0)
  deaths            Int      @default(0)
  timePlayedSeconds Int      @default(0) @map("time_played_seconds")
  classHash         BigInt?  @map("class_hash")
  activity          Activity @relation("player_activities", fields: [instanceId], references: [instanceId], onDelete: Cascade, onUpdate: NoAction, map: "player_activity_instance_id_fkey")
  player            Player   @relation("player_activities", fields: [membershipId], references: [membershipId], onDelete: Cascade, onUpdate: NoAction, map: "player_activity_membership_id_fkey")

  @@id([instanceId, membershipId], name: "instance_membership_pkey", map: "player_activity_instance_id_membership_id_pkey")
  @@index([instanceId], map: "idx_instance_id")
  @@index([membershipId], map: "idx_membership_id")
  @@map("player_activity")
}

model ActivityLeaderboard {
  id      String                     @id @unique
  entries ActivityLeaderboardEntry[] @relation("activity_leaderboard_entry_fk")

  @@map("leaderboard")
}

model ActivityLeaderboardEntry {
  rank          Int
  leaderboardId String              @map("leaderboard_id")
  instanceId    BigInt              @map("instance_id")
  activity      Activity            @relation(fields: [instanceId], references: [instanceId], onDelete: NoAction, onUpdate: NoAction)
  leaderboard   ActivityLeaderboard @relation("activity_leaderboard_entry_fk", fields: [leaderboardId], references: [id], onDelete: Cascade)

  @@id([leaderboardId, rank], map: "activity_leaderboard_rank_pkey")
  @@index([instanceId], map: "activity_leaderboard_entry_instance_id_index", type: Hash)
  @@map("activity_leaderboard_entry")
}

// model PGCR {
//   instanceId BigInt @id @map("instance_id")
//   data       Bytes
// 
//   @@map("pgcr")
// }
